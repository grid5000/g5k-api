# You'll need to activate pipelines for this file to have any effect
# in gitlab, go to Settings -> General -> Permissions -> Pipeline

stages:
 - test
 - deb
 - deploy

test-in-docker: &test-in-docker
  image: debian:jessie
  stage: test
  tags:
    - docker
  services:
    - mysql:5.5
    - postgres
  variables:
    RAILS_ENV: test
    MYSQL_ROOT_PASSWORD: uheiN4pe
    MYSQL_DATABASE: g5kapi_test
    MYSQL_USER: g5kapi
    MYSQL_PASSWORD: Pe9IeCei
    POSTGRES_USER: oar
    POSTGRES_PASSWORD: oar
    POSTGRES_DB: oar2_test
  script:
    - apt update
    - apt install -y postgresql-client git bundler rake libxml2-dev libxslt-dev libicu-dev libmysqlclient-dev libpq-dev nodejs
    - bundle install --path vendor/bundle
    - bundle exec rake db:migrate
    - bundle exec rake db:oar:seed
    - bundle exec rspec spec/
  coverage: '/\(\d+.\d+\%\) covered/'

test-for-stretch:
  <<: *test-in-docker
  image: debian:stretch
  services:
    - postgres
    - mariadb:10.1
  script:
    - apt update
    - apt install -y postgresql-client git bundler rake libxml2-dev libxslt-dev libicu-dev default-libmysqlclient-dev libpq-dev nodejs
    - bundle install --path vendor/bundle
    - bundle exec rake db:migrate
    - bundle exec rake db:oar:seed
    - bundle exec rspec spec/
  
deb:
  image: debian:jessie
  stage: deb
  tags:
  - docker
  script:
  - apt-get update
  - apt-get install -y git git-core bundler rake libxml2-dev ruby-dev libicu-dev build-essential libmysqlclient-dev libxslt-dev libpq-dev nodejs curl pkg-config
  - bundle install --path vendor/bundle
  - bundle exec rake package:build:debian 
  artifacts:
    paths:
    - pkg/g5k-api*.deb
    expire_in: '1 day'

push-package:
  stage: deploy
  # tags must be 'packages' so that we use the runner on packages.grid5000.fr
  tags:
    - packages
  only: # we only execute this job for tagged commits
    - tags
  script:
    - g5k-deploy-files --files 'pkg/g5k-api_*.deb' --directory deb/g5k-api/jessie/v3

