#!/bin/sh
# postinst script for $NAME
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

NAME=g5k-api

case "$1" in
    configure)
        chmod a+x /usr/bin/$NAME
        /usr/bin/$NAME rake assets:precompile
        chown -R $NAME.$NAME /etc/$NAME/
        chown -R $NAME.$NAME /var/db/$NAME/
        chown -R $NAME.$NAME /var/log/$NAME/
        chown -R $NAME.$NAME /opt/$NAME/
        chmod 0600 /opt/$NAME/config/*.yml
        if ! [ -e /etc/${NAME}/conf.d/secret.sh ]; then
          SECRET=`${NAME} rake secret`
          echo "export SECRET_KEY_BASE=\${SECRET_KEY_BASE:-${SECRET}}" > /etc/${NAME}/conf.d/secret.sh
        fi
        chown $NAME.$NAME /etc/${NAME}/conf.d/secret.sh
        chmod 0600 /etc/${NAME}/conf.d/secret.sh

        if /usr/bin/${NAME} rake db:migrate ; then
            echo "Success in migrating the db"
        else
            echo "No database configured for ${NAME}. No attempt made to migrate it."
            echo "  run /usr/bin/${NAME} rake db:create db:migrate when /opt/${NAME}/config/database.yml points to"
            echo "  a running database server."
        fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


